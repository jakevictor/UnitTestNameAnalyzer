root = true

[*]
charset = utf-8
end_of_line = crlf
indent_style = space
indent_size = 4

# Not yet supported by VS, use Format on Save extension for now (https://marketplace.visualstudio.com/items?itemName=WinstonFeng.FormatonSave)
trim_trailing_whitespace = true
insert_final_newline = false

# Dotnet code style settings:
[*.{cs,vb,cake}]
# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true
# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_field = false : error
dotnet_style_qualification_for_property = false : warning
dotnet_style_qualification_for_method = false : warning
dotnet_style_qualification_for_event = false : warning

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true : warning
dotnet_style_predefined_type_for_member_access = true : warning

# Use more modern language features when available
dotnet_style_object_initializer = true : warning
dotnet_style_collection_initializer = true : warning
dotnet_style_coalesce_expression = true : warning
dotnet_style_null_propagation = true : warning
dotnet_style_explicit_tuple_names = true : warning

# CSharp code style settings:
[*.{cs,cake}]
# Prefer "var" everywhere
csharp_style_var_for_built_in_types = true : warning
csharp_style_var_when_type_is_apparent = true : warning
csharp_style_var_elsewhere = true : warning

# Prefer everything to have an expression-body
csharp_style_expression_bodied_methods = true : warning
csharp_style_expression_bodied_constructors = true : warning
csharp_style_expression_bodied_operators = true : warning
csharp_style_expression_bodied_properties = true : warning
csharp_style_expression_bodied_indexers = true : warning
csharp_style_expression_bodied_accessors = true : warning

# Use modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true : warning
csharp_style_pattern_matching_over_as_with_null_check = true : warning
csharp_style_inlined_variable_declaration = true : warning
csharp_style_throw_expression = true : warning
csharp_style_conditional_delegate_call = true : warning

# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true

# Naming styles
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style.begins_with_i.capitalization = pascal_case
dotnet_naming_style.begins_with_i.required_prefix = I

# Naming symbols (AKA specifications in VS code style options)
dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = *

dotnet_naming_symbols.types.applicable_kinds = class,struct,interface,enum
dotnet_naming_symbols.types.applicable_accessibilities = *

dotnet_naming_symbols.constant_fields.applicable_kinds = field
dotnet_naming_symbols.constant_fields.applicable_accessibilities = *
dotnet_naming_symbols.constant_fields.required_modifiers = const

dotnet_naming_symbols.private_static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_readonly_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_static_readonly_fields.required_modifiers = static,readonly

dotnet_naming_symbols.private_static_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_static_fields.required_modifiers = static

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.applicable_accessibilities = *
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_symbols.private_or_internal_fields.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_fields.applicable_accessibilities = private,internal

dotnet_naming_symbols.nonfield_members.applicable_kinds = property,method,field
dotnet_naming_symbols.nonfield_members.applicable_accessibilities = *

# Naming rules
dotnet_naming_rule.interface.symbols = interface
dotnet_naming_rule.interface.style = begins_with_i
dotnet_naming_rule.interface.severity = warning

dotnet_naming_rule.types.symbols = types
dotnet_naming_rule.types.style = pascal_case
dotnet_naming_rule.types.severity = warning

dotnet_naming_rule.constant_fields.symbols = constant_fields
dotnet_naming_rule.constant_fields.style = pascal_case
dotnet_naming_rule.constant_fields.severity = warning

dotnet_naming_rule.private_static_readonly_fields.symbols = private_static_readonly_fields
dotnet_naming_rule.private_static_readonly_fields.style = pascal_case
dotnet_naming_rule.private_static_readonly_fields.severity = warning

dotnet_naming_rule.private_static_fields.symbols = private_static_fields
dotnet_naming_rule.private_static_fields.style = camel_case
dotnet_naming_rule.private_static_fields.severity = warning

dotnet_naming_rule.static_fields.symbols = static_fields
dotnet_naming_rule.static_fields.style = pascal_case
dotnet_naming_rule.static_fields.severity = warning

dotnet_naming_rule.private_or_internal_fields.symbols = private_or_internal_fields
dotnet_naming_rule.private_or_internal_fields.style = camel_case
dotnet_naming_rule.private_or_internal_fields.severity = warning

dotnet_naming_rule.nonfield_members.symbols = nonfield_members
dotnet_naming_rule.nonfield_members.style = pascal_case
dotnet_naming_rule.nonfield_members.severity = warning

[*.{xml,config,csproj,props}]
indent_size = 2

[*.json]
indent_size = 2

[*.yml]
indent_size = 2